# Descripción: Interface/placeholder para feeds live (WebSocket/REST). No implementar la red aquí.
# Ubicación: base_env/io/live_ws.py
# I/O: métodos a implementar por adapter real para entregar barras cerradas y ticks.

from __future__ import annotations
from typing import Protocol, Callable, Dict

class LiveFeed(Protocol):
    def on_bar(self, tf: str, callback: Callable[[Dict], None]) -> None: ...
    def on_tick(self, callback: Callable[[Dict], None]) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
